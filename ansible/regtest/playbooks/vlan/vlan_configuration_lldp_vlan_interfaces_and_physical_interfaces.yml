---

- hosts: leaf:spine
  become: true
  ignore_errors: yes
  tasks:
    - shell: dpkg --list | grep kernel
      register: kernel_version

    - debug:
        var: kernel_version.stdout_lines


- hosts: server_emulator
  become: true

  tasks:
    - command: "date +%Y%m%d%T"
      register: start_time

    - set_fact:
        hash_name: "vlan_configuration_lldp_vlan_interfaces_and_physical_interfaces_{{ start_time.stdout }}"
        start_time: "{{ start_time.stdout }}"


- hosts: leaf:spine
  become: true
  tasks:
    - name: Install lldpd
      apt:
        name: lldpd
        state: present

    - name: Take backup of /etc/lldpd.d/xeth.conf
      copy:
        src: "{{ xeth_config_file }}"
        dest: "{{ xeth_config_file_bck }}"
        remote_src: true

    - name: Copy default /etc/lldpd.d/xeth.conf file
      copy:
        src: "../../files/{{inventory_hostname}}/xeth_conf"
        dest: "{{ xeth_config_file }}"

    - name: Restart lldp service
      service:
        name: lldpd
        state: restarted


- hosts: leaf[0]:spine
  become: yes
  tasks:
    - file:
        path: "{{ vlan_log_dir }}"
        state: directory

    - name: Test vlan configuration lldp vlan interfaces and physical interfaces
      test_vlan_configuration:
        switch_name: "{{ inventory_hostname }}"
        leaf_switch: "{{ groups['leaf'][0] }}"
        spine_list: "{{ groups['spine'] }}"
        eth_list: "1,27"
        lldp: True
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ vlan_log_dir }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1


- hosts: leaf[1]:spine
  become: yes
  tasks:
    - file:
        path: "{{ vlan_log_dir }}"
        state: directory

    - name: Test vlan configuration lldp vlan interfaces and physical interfaces
      test_vlan_configuration:
        switch_name: "{{ inventory_hostname }}"
        leaf_switch: "{{ groups['leaf'][1] }}"
        spine_list: "{{ groups['spine'] }}"
        eth_list: "19,7"
        lldp: True
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ vlan_log_dir }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1


- hosts: leaf:spine
  become: yes
  tasks:
    - include: ../../playbooks/get_goes_version_and_tags.yml

    - name: Restore backup of /etc/lldpd.d/xeth.conf
      copy:
        src: "{{ xeth_config_file_bck }}"
        dest: "{{ xeth_config_file }}"
        remote_src: true

    - name: Reset setup configs
      command: "{{ item }}"
      with_items:
      - 'goes stop'
      - 'rmmod platina-mk1'
      - 'modprobe platina-mk1'
      - 'ifdown -a --allow vnet'
      - 'ifup -a'
      - 'goes start'

    - name: Remove backup file
      file:
        path: "{{ xeth_config_file_bck }}"
        state: absent


- include: ../../playbooks/master_reset_invaders.yml
  when: reset_config


- hosts: server_emulator
  become: true
  tasks:
    - name: Get the test result from redis db
      get_test_result_from_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: result

    - name: Print test case result
      debug:
        msg: "Test case result: {{ result.result_status }}"

    - name: Print failure summary
      debug:
        msg: "Failure summary: {{ result.result_detail }}"

    - lineinfile:
        path: "{{ regression_summary_report }}"
        line: "{{ hash_name }}: {{ result.result_status }}"


- hosts: leaf:spine
  become: true
  tasks:
    - name: Wait few seconds for vnetd to come up
      pause:
        seconds: 2

    - include: ../../playbooks/get_goes_status.yml

