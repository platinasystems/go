---

- hosts: leaf:spine
  become: true
  ignore_errors: yes
  tasks:
    - shell: dpkg --list | grep kernel
      register: kernel_version

    - debug:
        var: kernel_version.stdout_lines


- hosts: server_emulator
  become: true

  tasks:
    - command: "date +%Y%m%d%T"
      register: start_time

    - set_fact:
        hash_name: "issue_16_unix_run_goes_socks_vnet_panic_{{ start_time.stdout }}"
        start_time: "{{ start_time.stdout }}"


- hosts: spine[0]
  become: true
  tasks:
    - file:
        path: "{{ issues_log_dir }}"
        state: directory

    - name: Execute few vnet commands to check if it causes unix run goes socks vnet panic
      shell: "{{ item }}"
      with_items:
      - 'goes stop'     
      - 'goes start'
      - 'goes vnet show fe1 po m | head'
      - 'goes vnet show ip fib'
      - 'goes vnet show fe1 po m | head'
      - 'goes vnet show fe1 po m | tail'
      - 'goes vnet show fe1 po ph'
      - 'goes vnet show fe1 po ph | head'

    - name: Check goes status
      check_goes_health:
        switch_name: "{{ inventory_hostname }}"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ issues_log_dir }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1

    - include: ../../playbooks/get_goes_version_and_tags.yml


- hosts: server_emulator
  become: true
  tasks:
    - name: Get the test result from redis db
      get_test_result_from_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: result

    - name: Print test case result
      debug:
        msg: "Test case result: {{ result.result_status }}"

    - name: Print failure summary
      debug:
        msg: "Failure summary: {{ result.result_detail }}"

    - lineinfile:
        path: "{{ regression_summary_report }}"
        line: "{{ hash_name }}: {{ result.result_status }}"
